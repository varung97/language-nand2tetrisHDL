'fileTypes': [
  'hdl'
]
'name': 'Nand2Tetris HDL, nand2tetrisHDL'
'scopeName': 'source.nand2tetrisHDL'
'patterns': [
  {
    'include': '#comments'
  }
  {
    'include': '#constants'
  }
  {
    'include': '#keywords'
  }
  {
    'include': '#operators'
  }
  {
    'include': '#module_pattern'
  }
]
'repository':
  'comments':
    'patterns': [
      {
        'begin': '(^[ \\t]+)?(?=//)'
        'beginCaptures':
          '1':
            'name': 'punctuation.whitespace.comment.leading.nand2tetrisHDL'
        'end': '(?!\\G)'
        'patterns': [
          {
            'begin': '//'
            'beginCaptures':
              '0':
                'name': 'punctuation.definition.comment.nand2tetrisHDL'
            'end': '\\n'
            'name': 'comment.line.double-slash.nand2tetrisHDL'
          }
        ]
      }
      {
        'begin': '/\\*'
        'end': '\\*/'
        'name': 'comment.block.c-style.nand2tetrisHDL'
      }
    ]
  'constants':
    'patterns': [
      {
        'match': '\\b([0-9]+)\\b'
        'name': 'constant.numeric.nand2tetrisHDL'
      }
    ]
  'keywords':
    'patterns': [
      {
        'match': '\\b(IN\\b|OUT\\b|PARTS:\\B)'
        'name': 'keyword.other.nand2tetrisHDL'
      }
    ]
  'operators':
    'patterns': [
      {
        'match': '='
        'name': 'keyword.operator.verilog'
      }
    ]
  'parenthetical_list':
    'patterns': [
      {
        'begin': '\\(\\s*'
        'beginCaptures':
          '0':
            'name': 'punctuation.section.list.verilog'
        'end': '\\s*\\)'
        'endCaptures':
          '0':
            'name': 'punctuation.section.list.verilog'
        'name': 'meta.block.parenthetical_list.verilog'
        'patterns': [
          {
            'include': '#constants'
          }
          {
            'begin': '\\b[a-zA-Z][a-zA-Z0-9]*\\b\\s*(?==)'
            'beginCaptures':
              '0':
                'name': 'variable.parameter.type.module.verilog'
            'end': '(?<==)\\s*\\b[a-zA-Z][a-zA-Z0-9]*\\b'
            'endCaptures':
              '0':
                'name': 'variable.other.type.wire.verilog'
            'name': 'meta.block.parameter.passing.verilog'
            'patterns': [
              {
                'match': '='
                'name': 'keyword.operator.verilog'
              }
            ]
          }
        ]
      }
    ]
  'instantiation_patterns':
    'patterns': [
      {
        'begin': '\\b([a-zA-Z][a-zA-Z0-9]*)\\b\\s*(?=\\()'
        'beginCaptures':
          '1':
            'name': 'entity.name.function.chip.name.verilog'
        'end': '(?<=\\))\\s*;'
        'endCaptures':
          '0':
            'name': 'punctuation.terminator.expression.verilog'
        'name': 'meta.block.instantion.chip.verilog'
        'patterns': [
          {
            'include': '#parenthetical_list'
          }
        ]
      }
    ]
  'module_pattern':
    'patterns': [
      {
        'begin': '\\b(CHIP)\\s+([a-zA-Z][a-zA-Z0-9_]*)'
        'beginCaptures':
          '1':
            'name': 'storage.type.module.nand2tetrisHDL'
          '2':
            'name': 'entity.name.function.chip.declaration.nand2tetrisHDL'
        'end': '(?<=})'
        'endCaptures':
          '0':
            'name': 'punctuation.terminator.module.verilog'
        'name': 'meta.block.module.nand2tetrisHDL'
        'patterns': [
          {
            'include': '#comments'
          }
          {
            'include': '#constants'
          }
          {
            'include': '#keywords'
          }
          {
            'include': '#operators'
          }
          {
            'include': '#instantiation_patterns'
          }
        ]
      }
    ]
